<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	default-autowire="byName">
	
	<bean id="jobClientHttpFactory" class="org.fl.noodleschedule.core.client.http.JobClientHttpFactory" />
	
	<bean id="jobClientFactoryMap" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="sourceMap">
			<map>
				<entry key="http" value-ref="jobClientHttpFactory" />
			</map>
		</property>
	</bean>
	
	<bean id="triggerRouteFirst" class="org.fl.noodleschedule.core.route.TriggerRouteFirst" />
	<bean id="triggerRouteRandom" class="org.fl.noodleschedule.core.route.TriggerRouteRandom" />
	<bean id="triggerRouteSequence" class="org.fl.noodleschedule.core.route.TriggerRouteSequence" />
	
	<bean id="triggerRouteMap" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="sourceMap">
			<map>
				<entry key="first" value-ref="triggerRouteFirst" />
				<entry key="random" value-ref="triggerRouteRandom" />
				<entry key="sequence" value-ref="triggerRouteSequence" />
			</map>
		</property>
	</bean>
	
	<bean id="executeTrigger" class="org.fl.noodleschedule.core.trigger.ExecuteTriggerImpl" />
	
	<bean id="quartzDespatcher" class="org.fl.noodleschedule.core.scheduler.quartz.QuartzDespatcher" 
		init-method="start" destroy-method="destroy"> 
	</bean>
	
	<bean id="despatcherMap" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="sourceMap">
			<map>
				<entry key="quartz" value-ref="quartzDespatcher" />
			</map>
		</property>
	</bean>
	
	<bean id="executeSystemList" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<ref bean="checkJobRunTimeout" />
				<ref bean="checkIntervalAlarm" />
				<ref bean="checkClear" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="checkJobRunTimeout" class="org.fl.noodleschedule.core.system.jobs.timeout.CheckJobRunTimeout" >
		<property name="cron" value="* 0/1 * * * ?" />
	</bean>
	
	<bean id="checkClear" class="org.fl.noodleschedule.core.system.jobs.clear.CheckClear" >
		<property name="cron" value="* 0/1 * * * ?" />
		<property name="retentionTime" value="1209600" />
	</bean>
	
	<bean id="jobLoader" class="org.fl.noodleschedule.core.loader.JobLoader" />
	
	<bean id="dbDistributedLock" class="org.fl.noodle.common.distributedlock.db.DbDistributedLock" 
		init-method="start" destroy-method="destroy"> 
		<property name="tableName" value="JC_LOCK" />
		<property name="lockChangeHandler" ref="jobLoader" />
	</bean>
	
	<bean id="jobCallback" class="org.fl.noodleschedule.core.callback.JobCallbackImpl" 
		init-method="start" destroy-method="destroy" />
	
</beans>